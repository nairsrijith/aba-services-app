"""init

Revision ID: e138b4c222ce
Revises: 
Create Date: 2025-10-31 23:09:05.457767

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e138b4c222ce'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activities',
    sa.Column('activity_name', sa.String(length=51), nullable=False),
    sa.Column('activity_category', sa.String(length=51), nullable=False),
    sa.PrimaryKeyConstraint('activity_name')
    )
    op.create_table('designations',
    sa.Column('designation', sa.String(length=51), nullable=False),
    sa.PrimaryKeyConstraint('designation')
    )
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstname', sa.String(length=51), nullable=False),
    sa.Column('lastname', sa.String(length=51), nullable=True),
    sa.Column('position', sa.String(length=51), nullable=False),
    sa.Column('rba_number', sa.String(length=25), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('cell', sa.String(length=10), nullable=False),
    sa.Column('address1', sa.String(length=120), nullable=True),
    sa.Column('address2', sa.String(length=120), nullable=True),
    sa.Column('city', sa.String(length=51), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('zipcode', sa.String(length=6), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('password_hash', sa.String(length=200), nullable=False),
    sa.Column('user_type', sa.String(length=51), nullable=False),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('failed_attempt', sa.Integer(), nullable=False),
    sa.Column('activation_key', sa.String(length=15), nullable=True),
    sa.ForeignKeyConstraint(['position'], ['designations.designation'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('rba_number')
    )
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_employees_email'), ['email'], unique=True)

    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstname', sa.String(length=51), nullable=False),
    sa.Column('lastname', sa.String(length=51), nullable=True),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('gender', sa.String(length=51), nullable=False),
    sa.Column('parentname', sa.String(length=101), nullable=False),
    sa.Column('parentemail', sa.String(length=120), nullable=False),
    sa.Column('parentcell', sa.String(length=10), nullable=False),
    sa.Column('address1', sa.String(length=120), nullable=False),
    sa.Column('address2', sa.String(length=120), nullable=True),
    sa.Column('city', sa.String(length=51), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('zipcode', sa.String(length=6), nullable=False),
    sa.Column('supervisor_id', sa.Integer(), nullable=True),
    sa.Column('cost_supervision', sa.Float(), nullable=False),
    sa.Column('cost_therapy', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['supervisor_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paystubs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('generated_date', sa.Date(), nullable=False),
    sa.Column('total_hours', sa.Float(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(length=25), nullable=False),
    sa.Column('invoiced_date', sa.Date(), nullable=False),
    sa.Column('payby_date', sa.Date(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('date_from', sa.Date(), nullable=False),
    sa.Column('date_to', sa.Date(), nullable=False),
    sa.Column('invoice_items', sa.Text(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=25), nullable=True),
    sa.Column('paid_date', sa.Date(), nullable=True),
    sa.Column('payment_comments', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    op.create_table('payrates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('rate', sa.Float(), nullable=False),
    sa.Column('effective_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('interventions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('intervention_type', sa.String(length=51), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('file_names', sa.Text(), nullable=True),
    sa.Column('invoiced', sa.Boolean(), nullable=True),
    sa.Column('invoice_number', sa.String(length=25), nullable=True),
    sa.Column('is_paid', sa.Boolean(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['intervention_type'], ['activities.activity_name'], ),
    sa.ForeignKeyConstraint(['invoice_number'], ['invoices.invoice_number'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paystub_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('paystub_id', sa.Integer(), nullable=False),
    sa.Column('intervention_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('rate', sa.Float(), nullable=False),
    sa.Column('hours', sa.Float(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['intervention_id'], ['interventions.id'], ),
    sa.ForeignKeyConstraint(['paystub_id'], ['paystubs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('paystub_items')
    op.drop_table('interventions')
    op.drop_table('payrates')
    op.drop_table('invoices')
    op.drop_table('paystubs')
    op.drop_table('clients')
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_employees_email'))

    op.drop_table('employees')
    op.drop_table('designations')
    op.drop_table('activities')
    # ### end Alembic commands ###
